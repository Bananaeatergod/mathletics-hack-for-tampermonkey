// ==UserScript==
// @name         Mathletics autoanswer
// @namespace    https://tampermonkey.com
// @version      1.04
// @description  Mathletics Live Cheats that actually give points! Hold 'A' to generate points, Press 'A' to type in the answer, or if your answer is already typed press 'A' to submit
// @author       Bananaeatergod
// @match        *://live.mathletics.com/*
// @grant        none
// @license      MIT
// ==/UserScript==

(function() {
    'use strict';
    function typeAnswer(answer) {
        var inputElement = document.querySelector(".questions-input-adjustment.questions-input-width-v3");
        var currentIndex = 0;

        function typeCharacter() {
            if (currentIndex < answer.length) {
                var char = answer.charAt(currentIndex);
                inputElement.value += char;
                currentIndex++;
                typeCharacter();
            } else {
                var formElement = document.querySelector('.question-input-form');
                var submitEvent = new Event('submit', {
                    bubbles: true,
                    cancelable: true
                });
                formElement.dispatchEvent(submitEvent);
                setTimeout(performAction, 500);
            }
        }

        typeCharacter();
    }

    function ShowAnswer() {
        var questionText = document.querySelector('.questions-text-alignment.whiteTextWithShadow.question-size-v4').textContent;
        var equation = questionText.split('=')[0].trim();

        function calculateAnswer(equation) {
            equation = equation.replace("ร", "*").replace("รท", "/");
            var rightSide = parseFloat(questionText.split('=')[1].trim());

            if (equation.includes('*')) {
                // Handle multiplication with a missing factor (e.g., "4x = 8")
                var parts = equation.split('*').map(part => part.trim());
                if (parts[0] === '?' || parts[1] === '?') {
                    var knownFactor = parts[0] === '?' ? parseFloat(parts[1]) : parseFloat(parts[0]);
                    return rightSide / knownFactor;
                }
            }

            // Handle equations missing an operand
            if (equation.endsWith('+') || equation.endsWith('-') || equation.endsWith('*') || equation.endsWith('/')) {
                var leftSide = equation.slice(0, -1).trim();
                var operator = equation.slice(-1);

                switch (operator) {
                    case '+': return rightSide - (leftSide ? parseFloat(leftSide) : 0);
                    case '-': return (leftSide ? parseFloat(leftSide) : 0) - rightSide;
                    case '*': return rightSide / (leftSide ? parseFloat(leftSide) : 1);
                    case '/': return (leftSide ? parseFloat(leftSide) : 1) * rightSide;
                }
            } else if (equation.includes("Half of")) {
                var numberPart = equation.split("Half of")[1].trim();
                var number = parseFloat(numberPart);
                return number / 2;
            } else {
                return eval(equation);
            }
        }

        var answer = calculateAnswer(equation);
        typeAnswer(answer.toString());
    }

    window.addEventListener("keydown", checkKeyPressed, false);

    function checkKeyPressed(e) {
        if (e.key === 'a' || e.key === 'A') {
            ShowAnswer();
        }
    }
})();
